Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
# STEP 1: COLLECT DATA
# ====================================================
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Sep23 <- read_csv('202309-divvy-tripdata.csv')
Trips_Oct23 <- read_csv('202310-divvy-tripdata.csv')
Trips_Nov23 <- read_csv('202311-divvy-tripdata.csv')
Trips_Dec23 <- read_csv('202312-divvy-tripdata.csv')
Trips_Jan24 <- read_csv('202401-divvy-tripdata.csv')
Trips_Feb24 <- read_csv('202402-divvy-tripdata.csv')
Trips_Mar24 <- read_csv('202403-divvy-tripdata.csv')
Trips_Apr24 <- read_csv('202404-divvy-tripdata.csv')
Trips_May24 <- read_csv('202405-divvy-tripdata.csv')
Trips_Jun24 <- read_csv('202406-divvy-tripdata.csv')
Trips_July24 <- read_csv('202407-divvy-tripdata.csv')
colnames(Trips_Aug20)
colnames(Trips_Aug23)
colnames(Trips_Sep23)
colnames(Trips_Oct23)
colnames(Trips_Jan24)
colnames(Trips_Feb24)
colnames(Trips_Mar24)
colnames(Trips_Apr24)
colnames(Trips_May24)
colnames(Trips_Jun24)
colnames(Trips_July24)
# [1] "ride_id"            "rideable_type"      "started_at"         "ended_at"
# [5] "start_station_name" "start_station_id"   "end_station_name"   "end_station_id"
# [9] "start_lat"          "start_lng"          "end_lat"            "end_lng"
# [13] "member_casual"
colnames(Trips_Apr21)
# STEP 1: COLLECT DATA
# ====================================================
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
---
library(tidyverse) #helps wrangle data
library(lubridate) #helps wrangle date attributes
#     date, intersect, setdiff, union
library(skimr) #get summary data library(janitor)
#     chisq.test, fisher.test
library(dplyr)
# STEP 1: COLLECT DATA
# ====================================================
Trips_Aug23 <- read_csv('202308-divvy-tripdata.csv')
Trips_Sep23 <- read_csv('202309-divvy-tripdata.csv')
Trips_Oct23 <- read_csv('202310-divvy-tripdata.csv')
Trips_Nov23 <- read_csv('202311-divvy-tripdata.csv')
Trips_Dec23 <- read_csv('202312-divvy-tripdata.csv')
Trips_Jan24 <- read_csv('202401-divvy-tripdata.csv')
Trips_Feb24 <- read_csv('202402-divvy-tripdata.csv')
Trips_Mar24 <- read_csv('202403-divvy-tripdata.csv')
Trips_Apr24 <- read_csv('202404-divvy-tripdata.csv')
Trips_May24 <- read_csv('202405-divvy-tripdata.csv')
Trips_Jun24 <- read_csv('202406-divvy-tripdata.csv')
Trips_July24 <- read_csv('202407-divvy-tripdata.csv')
#  STEP 2: WRANGLE DATA AND COMBINE INTO A SINGLE FILE
#==================================================== # Compare column names each of the files # While the names donâ€™t have to be in the same order, they DO need to match perfectly before we can use a command to join them into one file
colnames(Trips_Aug23)
colnames(Trips_Sep23)
colnames(Trips_Oct23)
colnames(Trips_Nov23)
colnames(Trips_Dec23)
colnames(Trips_Jan24)
colnames(Trips_Feb24)
colnames(Trips_Mar24)
colnames(Trips_Apr24)
colnames(Trips_May24)
colnames(Trips_Jun24)
colnames(Trips_July24)
# Inspect the dataframes and look for inconguencies
# ====================================================
str(Trips_Aug23)
str(Trips_Sep23)
str(Trips_Oct23)
str(Trips_Nov23)
compare_df_cols(Trips_Aug23, Trips_Sep23, Trips_Oct23, Trips_Nov23, Trips_Dec23, Trips_Jan24, Trips_Feb24, Trips_Mar24, Trips_Apr24, Trips_May24, Trips_Jun24, Trips_July24, return = "mismatch")
compare_df_cols(Trips_Aug23, Trips_Sep23, Trips_Oct23, Trips_Nov23, Trips_Dec23, Trips_Jan24, Trips_Feb24, Trips_Mar24, Trips_Apr24, Trips_May24, Trips_Jun24, Trips_July24, return = "mismatch")
---
library(tidyverse) #helps wrangle data
library(lubridate) #helps wrangle date attributes
#     date, intersect, setdiff, union
library(skimr) #get summary data library(janitor)
#     chisq.test, fisher.test
library(dplyr)
compare_df_cols(Trips_Aug23, Trips_Sep23, Trips_Oct23, Trips_Nov23, Trips_Dec23, Trips_Jan24, Trips_Feb24, Trips_Mar24, Trips_Apr24, Trips_May24, Trips_Jun24, Trips_July24, return = "mismatch")
---
install.packages("janitor")
library(janitor)
compare_df_cols(Trips_Aug23, Trips_Sep23, Trips_Oct23, Trips_Nov23, Trips_Dec23, Trips_Jan24, Trips_Feb24, Trips_Mar24, Trips_Apr24, Trips_May24, Trips_Jun24, Trips_July24, return = "mismatch")
colnames(Trips_Aug23)
#Stack individual data frames into one big data frame
#Remove unused column Rename Columns
all_trips <- bind_rows(Trips_Aug23, Trips_Sep23, Trips_Oct23, Trips_Nov23, Trips_Dec23, Trips_Jan24, Trips_Feb24, Trips_Mar24, Trips_Apr24, Trips_May24, Trips_Jun24, Trips_July24)
all_trips <- all_trips %>%
select(-c(start_lat, start_lng, end_lat, end_lng))
all_trips <- all_trips %>%  rename(trip_id= ride_id, ride_type =rideable_type, start_time = started_at,end_time =ended_at, from_station_name = start_station_name, from_station_id = start_station_id, to_station_name = end_station_name, to_station_id = end_station_id, usertype = member_casual)
#====================================================== # Inspect the new table that has been created
colnames(all_trips)
dim(all_trips)
head(all_trips)
str(all_trips)
summary(all_trips)
skim(all_trips)
is.factor(all_trips$ride_length)
all_trips$date <- as.Date(all_trips$start_time) #The default format is yyyy- mm-dd
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")
all_trips$ride_length <- difftime(all_trips$end_time,all_trips$start_time)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)
is.factor(all_trips$ride_length)
all_trips$date <- as.Date(all_trips$start_time) #The default format is yyyy- mm-dd
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")
all_trips$ride_length <- difftime(all_trips$end_time,all_trips$start_time)
skim(all_trips$ride_length)
skim(all_trips_v2)
all_trips_v2 <- all_trips[!(all_trips$ride_length<0),]
skim(all_trips_v2)
write.csv(all_trips_v2, "data.csv")
summary(all_trips_v2$ride_length)
